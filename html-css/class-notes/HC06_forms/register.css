* {
  /** resetleme */
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Raleway", sans-serif;
  background-image: url("https://cdn.pixabay.com/photo/2022/12/01/17/52/sea-7629517_960_720.jpg");

  background-repeat: no-repeat;
  background-size: cover;

  /*! body'nin default olarak yuksekligi yoktur. */
  height: 100vh; /*?Tarayicinin gorunen alanin 100 % yuksekligi*/
}

h1 {
  padding: 20px 0;
  text-align: center;
  color: aliceblue;
}

form {
  background-image: linear-gradient(0deg, #d9afd9 0%, #97d9e1 100%);
  width: fit-content;
  margin: 20px auto;
  padding: 30px;
  border-radius: 10px;
}

/*! label inline elementtir. Dolayisiyla width property'si dogrudan calismaz */
label {
  display: inline-block;
  width: 100px;
}

/*? radio buton ve checkbox'lari bir div'e koydugumuz ve div bir blok element oldugu icin bu elementler label'in alt satirina inmis oldular. 

/*? div'leri yeniden yukari cikarmak icin bu div'lere class atamasi yaptik ve inline-block haline getirdik.*/
.lang-div,
.gender-div {
  display: inline-block;
}

.lang-div label,
.gender-div label {
  width: auto;
  margin-right: 10px;
}

.inputs {
  border-radius: 5px;
  width: 300px;
  padding: 10px;
  /* margin-bottom: 20px; */
  border: 1px solid rgba(0, 0, 0, 0.3);
}

/*! Bu kisma gerek kalmamis oldu */
/* .radio-check { */
/* margin-bottom: 20px; */
/* margin-left: 20px; */
/* } */

.btn-container {
  text-align: center;
}

.btn-container input {
  width: 100px;
  border-radius: 10px;
  border: none;
  background-color: hsl(299, 100%, 70%);
  padding: 10px;
}
.btn-container input:hover {
  background-color: hsl(299, 100%, 40%);
  color: aliceblue;
  font-weight: 700;
  cursor: pointer;
}

/*? input'larin her birine margin-bottom verdigimizde bu inputlar div'e dahil oldugu icin otomatik olarak div'in alanini gereksiz yere buyutmus oluyordu. 

/*? Bu yuzden her bir input'a margin-bottom vermek yerine bu inputlari tasiyan div'lere margin-bottom vermek aslinda daha temiz bir yaklasim olabilir.

/*?  Bu yapmak icin HTML sayfamizda input'lari tasiyan tum div'lere inputs-div adindaki class'i atadik ve css' de margin-bottom verdik*/

.inputs-div {
  margin-bottom: 20px;
}

/*! vertical-align bir html elementini dikey olarak hizalamak icin kullanilabilir. 
/*! Ancak elementin inline veya inline-block olmasi gerekir. 
/*! Bir block elementi vertical-align ile hizalayamayiz.
/*! Buradaki goruntude Adress label'nin ortalanmasini bozan textarea elemaniydi.
/*! O yuzden textarea elemanini dikey olarak ortalayarak sorunu cozukebiliriz.
/*! textarea inline-block bir element oldugu icin vertical ile dikey hizalanabilir.*/

/*? vertical align ile ilgili ayrintili bilgi icin */
/*! https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align#:~:text=The%20vertical%2Dalign%20property%20can,a%20cell%20in%20a%20table. */

textarea {
  /*? textarea'nin dikey olarak ortalanmasini sagladik  */
  vertical-align: middle;
  /*? textarea'nin alanini buyultulebilmesini engelledik */
  resize: none;
}
